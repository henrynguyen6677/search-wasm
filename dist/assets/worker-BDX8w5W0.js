let s;const A=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&A.decode();let f=null;function g(){return(f===null||f.byteLength===0)&&(f=new Uint8Array(s.memory.buffer)),f}function l(e,t){return e=e>>>0,A.decode(g().subarray(e,e+t))}let b=0;const w=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},M=typeof w.encodeInto=="function"?function(e,t){return w.encodeInto(e,t)}:function(e,t){const n=w.encode(e);return t.set(n),{read:e.length,written:n.length}};function m(e,t,n){if(n===void 0){const c=w.encode(e),a=t(c.length,1)>>>0;return g().subarray(a,a+c.length).set(c),b=c.length,a}let r=e.length,i=t(r,1)>>>0;const _=g();let o=0;for(;o<r;o++){const c=e.charCodeAt(o);if(c>127)break;_[i+o]=c}if(o!==r){o!==0&&(e=e.slice(o)),i=n(i,r,r=o+e.length*3,1)>>>0;const c=g().subarray(i+o,i+r),a=M(e,c);o+=a.written,i=n(i,r,o,1)>>>0}return b=o,i}function d(e){const t=s.__wbindgen_export_0.get(e);return s.__externref_table_dealloc(e),t}const x=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(e=>s.__wbg_searcher_free(e>>>0,1));class R{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,x.unregister(this),t}free(){const t=this.__destroy_into_raw();s.__wbg_searcher_free(t,0)}constructor(t){const n=m(t,s.__wbindgen_malloc,s.__wbindgen_realloc),r=b,i=s.searcher_new(n,r);if(i[2])throw d(i[1]);return this.__wbg_ptr=i[0]>>>0,x.register(this,this.__wbg_ptr,this),this}process_chunk(t){const n=m(t,s.__wbindgen_malloc,s.__wbindgen_realloc),r=b;s.searcher_process_chunk(this.__wbg_ptr,n,r)}finish(){s.searcher_finish(this.__wbg_ptr)}get_paginated_result(t,n){const r=s.searcher_get_paginated_result(this.__wbg_ptr,t,n);if(r[2])throw d(r[1]);return d(r[0])}}async function S(e,t){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,t)}catch(r){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}else{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function k(){const e={};return e.wbg={},e.wbg.__wbg_new_405e22f390576ce2=function(){return new Object},e.wbg.__wbg_new_78feb108b6472713=function(){return new Array},e.wbg.__wbg_set_37837023f3d740e8=function(t,n,r){t[n>>>0]=r},e.wbg.__wbg_set_3f1d0b984ed272ed=function(t,n,r){t[n]=r},e.wbg.__wbindgen_bigint_from_u64=function(t){return BigInt.asUintN(64,t)},e.wbg.__wbindgen_error_new=function(t,n){return new Error(l(t,n))},e.wbg.__wbindgen_init_externref_table=function(){const t=s.__wbindgen_export_0,n=t.grow(4);t.set(0,void 0),t.set(n+0,void 0),t.set(n+1,null),t.set(n+2,!0),t.set(n+3,!1)},e.wbg.__wbindgen_number_new=function(t){return t},e.wbg.__wbindgen_string_new=function(t,n){return l(t,n)},e.wbg.__wbindgen_throw=function(t,n){throw new Error(l(t,n))},e}function F(e,t){return s=e.exports,T.__wbindgen_wasm_module=t,f=null,s.__wbindgen_start(),s}async function T(e){if(s!==void 0)return s;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/assets/ripgrep_lite_wasm_bg-BFg6b2Dp.wasm",import.meta.url));const t=k();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:n,module:r}=await S(await e,t);return F(n,r)}async function v(){await T(),self.postMessage({type:"ready"})}v().catch(e=>{console.error("Worker: Lỗi khởi tạo WASM",e),self.postMessage({type:"error",text:"Không thể khởi tạo lõi xử lý."})});self.onmessage=async e=>{const{type:t,payload:n}=e.data;if(t==="processFile"){const{file:r,pattern:i}=n;try{const _=new R(i),c=r.stream().pipeThrough(new TextDecoderStream).getReader(),a=r.size;let p=0,h=-1;for(;;){const{done:W,value:y}=await c.read();if(W){_.finish();break}_.process_chunk(y),p+=y.length;const u=a>0?Math.round(p/a*100):0;u>h&&(self.postMessage({type:"progress",progress:u}),h=u)}const E=_.get_paginated_result(1,Number.MAX_SAFE_INTEGER);self.postMessage({type:"done",matches:E.lines})}catch(_){console.error(`Worker cho file ${r.name} bị lỗi:`,_),self.postMessage({type:"error",text:`Lỗi khi xử lý file ${r.name}.`})}}};
